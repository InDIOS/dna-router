{"name":"Dna-router","tagline":"An advance Angular's ui-router style router provider for Polymer.","body":"# dna-router\r\n\r\n`ui-router` is an advance Angular's ui-router style router provider for Polymer.\r\n\r\nThis element is compatible with Polymer 1.0.0 and above.\r\n\r\nInstall using bower: \r\n```script\r\nbower install dna-router\r\n```\r\n\r\nSetting up is easy two step proccess.\r\n\r\n1. Define state names and url. Import `dna-new-state.html`.\r\n ```html\r\n<dna-new-state state='home' route='/home'></dna-new-state>\r\n<dna-new-state state='user' route='/user/:id/'></dna-new-state>\r\n<dna-new-state \tstate='app' route='/app' parent='home'> // Create link /home/app\r\n</dna-new-state>\r\n```\r\n\r\n\r\n2. Declare your `dna-view` for a particular State. You can have multiple `dna-view` for a single state. \r\n ```html\r\n<dna-view state='home' element='home-template' template='\\templates\\home.html'></dna-view>\r\n<dna-view state='user' element='login-template' template='\\templates\\user.html'></dna-view>\r\n<dna-view state='app' element='app-template' template='\\app.html'></dna-view>\r\n<dna-view state='app' element='app-sidebar-template' template='\\templates\\app-sidebar.html'>\r\n</dna-view>\r\n```\r\n\r\n`home-template` is an polymer element inside `home.html`. It looks something like this:\r\n\r\n\r\n```html\r\n<link rel=\"import\" href=\"/bower/dna-router/dna-router-behaviors.html\">\r\n\r\n<dom-module id='home-template'>\r\n\t<style >\r\n\t:host {\r\n\t\tdisplay: inline-block;\r\n\t}\r\n\t</style>\r\n\t<template>\r\n\t\t<div flex>home</div>\r\n\t</template>\r\n</dom-module>\r\n<script type=\"application/javascript\">\r\n    Polymer({\r\n        is:'home-template',\r\n        behaviors: [DnaStateProviderBehavior],\t\t// Note this\r\n        attached: function(){\r\n          // Do your normal stuff.\r\n          // `param` is available in this.param\r\n\t}\r\n    })\r\n\r\n</script>\r\n```\r\n\r\n`DnaStateProviderBehavior` must be imported in the template. It allows to access `param` and also to communicate between different views of same state by triggering custom events.\r\n\r\nTo communicate just use `this.notify('your-event', data)`. This function will trigger `your-event` type event in all polymer element of same state. Listen it via `listeners`.\r\n\r\n```script\r\nlisteners:{\r\n\t'your-event': '_toDoFunction',\r\n},\r\n```\r\n\r\nYou can navigate to a different `state` in `ui-router` fashion.\r\n``` script\r\nthis.go('user', {id: 123}) //Second parameter is just object containg all params\r\n```\r\n\r\n\r\n`Note: ` In above exapmple `template` path is absolute.\r\n\r\nDon't forget to include `Polymer 1.0` in your project ;) \r\n\r\nEnjoy :)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}